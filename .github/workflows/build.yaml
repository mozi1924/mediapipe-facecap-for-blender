name: Build and Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release Type (beta/release)'
        required: true
        default: 'beta'
      semver:
        description: 'Semantic Version (e.g. 1.0.0)'
        required: true

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    outputs:
      build_version: ${{ env.VERSION }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整的提交历史用于生成哈希

    - name: Generate version info
      id: version
      shell: bash
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.semver }}-${{ github.event.inputs.release_type }}" >> $GITHUB_ENV
          echo "TAG=${{ github.event.inputs.semver }}-${{ github.event.inputs.release_type }}" >> $GITHUB_ENV
        else
          COMMIT_SHA=$(git rev-parse --short HEAD)
          echo "VERSION=canary-$COMMIT_SHA" >> $GITHUB_ENV
          echo "TAG=canary-$COMMIT_SHA" >> $GITHUB_ENV
        fi
        echo "Generated version: $VERSION"

    - name: Build executable
      run: |
        pyinstaller -D -c -w main.py

    - name: Package artifacts
      uses: thedoctor0/zip-release@0.7.5
      with:
        type: 'zip'
        filename: FaceCap_${{ env.VERSION }}_${{ runner.os }}.zip
        path: dist/

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: FaceCap_${{ env.VERSION }}_${{ runner.os }}
        path: FaceCap_${{ env.VERSION }}_${{ runner.os }}.zip

  release:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.build.outputs.TAG }}  # 使用显式标签变量
        name: FaceCap ${{ needs.build.outputs.VERSION }}
        generate_release_notes: true
        files: |
          artifacts/**/*.zip